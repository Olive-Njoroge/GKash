openapi: 3.0.0
info:
  title: GKash
  version: 1.0.0
  description: API documentation for authentication, user management, accounts, and transactions

servers:
  - url: https://gkash.onrender.com/api
    description: Production server
  - url: http://localhost:3000/api
    description: Development server

paths:
  /auth/signup:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_name
                - phoneNumber
                - user_pin
                - user_nationalId
              properties:
                user_name:
                  type: string
                  example: Olive
                phoneNumber:
                  type: string
                  example: "6789087654"
                user_pin:
                  type: string
                  format: password
                  example: mySecretPass123
                user_nationalId:
                  type: string
                  example: "12345678"
      responses:
        "201":
          description: Signup successful

  /auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_nationalId
                - user_pin
              properties:
                user_nationalId:
                  type: string
                  example: "12345678"
                user_pin:
                  type: string
                  format: password
                  example: mySecretPass123
      responses:
        "200":
          description: Login successful

  /user:
    get:
      summary: Get all users
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of users

  /user/{id}:
    get:
      summary: Get user by ID
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: A single user object

    put:
      summary: Update user by ID
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                phoneNumber:
                  type: string
      responses:
        "200":
          description: User updated successfully

    delete:
      summary: Delete user by ID
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: User deleted successfully

  /accounts:
    post:
      summary: Create a new account
      tags: [Accounts]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - account_type
              properties:
                account_type:
                  type: string
                  enum: ["balanced fund", "fixed income fund", "money market fund", "stock market"]
                  example: balanced fund
      responses:
        "201":
          description: Account created successfully

    get:
      summary: Get all accounts for logged-in user
      tags: [Accounts]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of accounts

  /accounts/{id}:
    get:
      summary: Get account by ID
      tags: [Accounts]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Account object

    delete:
      summary: Delete account by ID
      tags: [Accounts]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Account deleted successfully

  /transactions:
    post:
      summary: Create a new transaction (deposit or withdraw)
      tags: [Transactions]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_type
                - amount
              properties:
                transaction_type:
                  type: string
                  enum: [deposit, withdraw]
                  example: deposit
                amount:
                  type: number
                  example: 1000
      responses:
        "201":
          description: Transaction successful

    get:
      summary: Get all transactions for authenticated user
      tags: [Transactions]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of transactions

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
